<?php

/**
 * This file is part of the Phalcon Framework.
 *
 * (c) Phalcon Team <team@phalcon.io>
 *
 * For the full copyright and license information, please view the LICENSE.txt
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace Phalcon\Tests\Unit\Session\Adapter;

use Phalcon\Session\Manager;
use Phalcon\Tests\Support\AbstractUnitTestCase;
use Phalcon\Tests1\Fixtures\Traits\DiTrait2;

use function uniqid;

final class OpenTest extends AbstractUnitTestCase
{
    use DiTrait2;

    /**
     * Tests Phalcon\Session\Adapter\Libmemcached :: open()
     *
     * @return void
     *
     * @author Phalcon Team <team@phalcon.io>
     * @since  2020-09-09
     */
    public function testSessionAdapterLibmemcachedOpen(): void
    {
        $adapter = $this->newService('sessionLibmemcached');

        $actual = $adapter->open('test', 'test1');
        $this->assertTrue($actual);
    }

    /**
     * Tests Phalcon\Session\Adapter\Noop :: open()
     *
     * @return void
     *
     * @author Phalcon Team <team@phalcon.io>
     * @since  2020-09-09
     */
    public function testSessionAdapterNoopOpen(): void
    {
        $adapter = $this->newService('sessionNoop');
        $actual  = $adapter->open(self::cacheDir(), 'test1');
        $this->assertTrue($actual);
    }

    /**
     * Tests Phalcon\Session\Adapter\Redis :: open()
     *
     * @return void
     *
     * @author Phalcon Team <team@phalcon.io>
     * @since  2020-09-09
     */
    public function testSessionAdapterRedisOpen(): void
    {
        $adapter = $this->newService('sessionRedis');

        $actual = $adapter->open('test', 'test1');
        $this->assertTrue($actual);
    }

    /**
     * Tests Phalcon\Session\Adapter\Stream :: open()
     *
     * @return void
     *
     * @author Phalcon Team <team@phalcon.io>
     * @since  2020-09-09
     */
    public function testSessionAdapterStreamOpen(): void
    {
        $adapter = $this->newService('sessionStream');

        $actual = $adapter->open(self::cacheDir('sessions'), 'test1');
        $this->assertTrue($actual);
    }

    /**
     * Tests Phalcon\Session\Adapter\Stream :: open()
     *
     * @return void
     *
     * @author Phalcon Team <team@phalcon.io>
     * @since  2020-09-09
     */
    public function testSessionAdapterStreamOpenIssue14265(): void
    {
        $session = new Manager();
        $stream  = $this->newService('sessionStream');
        $session->setAdapter($stream);

        $actual = $session->start();
        $this->assertTrue($actual);

        $value = uniqid();
        $stream->write('test1', $value);

        $file = self::cacheDir('sessions') . '/test1';
        $this->assertFileExists($file);

        $contents = file_get_contents($file);
        $this->assertStringContainsString($value, $contents);
        self::safeDeleteFile(self::cacheDir('sessions/test1'));
    }
}
